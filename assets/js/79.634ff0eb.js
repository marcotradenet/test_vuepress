(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{373:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"updating-a-validator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-a-validator"}},[a._v("#")]),a._v(" Updating a validator")]),a._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[a._v("DANGER")]),a._v(" "),s("p",[a._v("If you are a new validator you need follow the "),s("RouterLink",{attrs:{to:"/docs2.2.0/nodes/validator-node-installation.html"}},[s("em",[a._v('"Becoming a validator"')]),a._v(" procedure")]),a._v("."),s("br"),a._v(" "),s("strong",[a._v("DO NOT USE THIS UPDATE PROCEDURES")])],1)]),a._v(" "),s("p",[a._v("This section describes the procedure that needs to be followed in order to update a validator node from one\nversion to another.")]),a._v(" "),s("p",[a._v("For updating will be sent to the validators the type and a brief explanation of the steps to be taken."),s("br"),a._v("\nThis guide contains only a general basic explanation of the procedures to be applied.")]),a._v(" "),s("p",[a._v("In general there are 3 types of updates")]),a._v(" "),s("ul",[s("li",[a._v("Update type "),s("a",{attrs:{href:"#update-type-1-hard-fork"}},[s("code",[a._v("1 - Hard fork")])])]),a._v(" "),s("li",[a._v("Update type "),s("a",{attrs:{href:"#update-type-2-soft-fork"}},[s("code",[a._v("2 - Soft fork")])])]),a._v(" "),s("li",[a._v("Update type "),s("a",{attrs:{href:"#update-type-3-reset-reinstall-chain"}},[s("code",[a._v("3 - Reset/reinstall chain")])])])]),a._v(" "),s("h2",{attrs:{id:"update-type-1-hard-fork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-type-1-hard-fork"}},[a._v("#")]),a._v(" Update type 1 - Hard fork")]),a._v(" "),s("p",[a._v("In this case, the chain state will be preserved from its beginning to a certain point in time.")]),a._v(" "),s("h3",{attrs:{id:"preliminary-risks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preliminary-risks"}},[a._v("#")]),a._v(" Preliminary/Risks")]),a._v(" "),s("p",[a._v("When signalling a required update that should follow this procedure, the following information will\nbe let known to all validators:")]),a._v(" "),s("ol",[s("li",[a._v("A specific block height to stop chain: "),s("code",[a._v("<stop_block_height>")])]),a._v(" "),s("li",[a._v("The new chain software version: "),s("code",[a._v("<new_version>")])]),a._v(" "),s("li",[a._v("A deadline expressed in UTC format")]),a._v(" "),s("li",[a._v("A new genesis_time in UTC format (something like 2020-06-12T08:55:00Z): "),s("code",[a._v("<genesis_time>")])]),a._v(" "),s("li",[a._v("The new chain_id: "),s("code",[a._v("<new_chain_id>")])]),a._v(" "),s("li",[a._v("The old chain_id: "),s("code",[a._v("<old_chain_id>")])])]),a._v(" "),s("p",[a._v("If you are a validator, please make sure that you know all those information before proceeding with the update.")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("You should reach "),s("a",{attrs:{href:"#setup-height-to-stop-the-chain"}},[a._v("Setup height to stop the chain")]),a._v(" point before update event."),s("br"),a._v("\nYou prepare all settings as soon as you become aware of the update data")])]),a._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[a._v("Double signing")]),a._v(" "),s("p",[a._v("Due to the nature of the update operations, there is some risk of double signature.\nTo avoid every sort of risks please verify the software version, the hash of the "),s("code",[a._v("genesis.json")]),a._v(" file and the specific\nconfiguration present inside the "),s("code",[a._v("config.toml")]),a._v(" file.")])]),a._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[a._v("DANGER")]),a._v(" "),s("p",[a._v("Update time"),s("br"),a._v("\nThe deadline of the update must be respected: every validator that will not update just in time will be slashed as offline node.")])]),a._v(" "),s("h3",{attrs:{id:"install-support-software"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-support-software"}},[a._v("#")]),a._v(" Install support software")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v("\n")])])]),s("h3",{attrs:{id:"setup-environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-environment"}},[a._v("#")]),a._v(" Setup environment")]),a._v(" "),s("p",[a._v("Each validator has its own specific environment and therefore will have to modify the variables according to its setup."),s("br"),a._v(" "),s("strong",[a._v("The following setups are general guidelines")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("UPDATE_PROFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v('/.profile_update_cnd"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CND=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/.cnd\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CND_CONFIG=\"$HOME_CND/config\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CND_DATA=\"$HOME_CND/data\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CNCLI=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/.cncli\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export APP_TOML=\"$HOME_CND_CONFIG/app.toml\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export BIN_DIR=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/go/bin\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export SRC_GIT_DIR=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/commercionetwork\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export BUILD_DIR=\"$SRC_GIT_DIR/build\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export NEW_CHAIN_ID=\"<new_chain_id>\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export CHAIN_ID=\"<old_chain_id>\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export BUILD_VERSION=\"<new_version>\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export ALT_BLOCK=<stop_block_height>'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export NEW_GENESIS_TIME=\"<genesis_time>\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('". '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/.profile\n")])])]),s("h3",{attrs:{id:"compile-new-executables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compile-new-executables"}},[a._v("#")]),a._v(" Compile new executables")]),a._v(" "),s("p",[a._v("In order to properly update your validator node, first of all you need to clone the\n"),s("a",{attrs:{href:"https://github.com/commercionetwork/commercionetwork",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("commercionetwork")]),a._v(" repo"),s("OutboundLink")],1),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/commercionetwork/commercionetwork.git "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SRC_GIT_DIR")]),a._v("\n")])])]),s("p",[a._v("Once downloaded, you need to compile the binaries with correct version:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SRC_GIT_DIR")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BUILD_VERSION")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" build\n")])])]),s("p",[a._v("Verify your version")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./build/cnd version\n")])])]),s("p",[a._v("should be the same value of "),s("code",[a._v("<new_version>")])]),a._v(" "),s("h3",{attrs:{id:"setup-height-to-stop-the-chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-height-to-stop-the-chain"}},[a._v("#")]),a._v(" Setup height to stop the chain")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s|halt-height = .*|halt-height = '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ALT_BLOCK")]),a._v('|g"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v(".tmp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v(".tmp "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" cnd restart\n")])])]),s("h3",{attrs:{id:"control-if-chain-is-stopped"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#control-if-chain-is-stopped"}},[a._v("#")]),a._v(" Control if chain is stopped")]),a._v(" "),s("p",[a._v("After the block "),s("code",[a._v("<stop_block_height>")]),a._v(" a chain stop message should appear at the indicated block.\nTo verify that the chain is actually locked check with reading the logs")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" journalctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" cnd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n")])])]),s("h3",{attrs:{id:"stop-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stop-services"}},[a._v("#")]),a._v(" Stop services")]),a._v(" "),s("p",[a._v("Make sure you have stopped services and export the chain")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl stop cnd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl stop cncli "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# if you running rest server")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("pkill")]),a._v(" cnd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("pkill")]),a._v(" cncli\n")])])]),s("p",[a._v("and control it reading the logs")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" journalctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" cnd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n")])])]),s("h3",{attrs:{id:"export-chain-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export-chain-state"}},[a._v("#")]),a._v(" Export chain state")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cnd "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" --for-zero-height "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/export_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json\n")])])]),s("h3",{attrs:{id:"backup-executables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backup-executables"}},[a._v("#")]),a._v(" Backup executables")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cnd "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cnd.back\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cncli "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cncli.back\n")])])]),s("h3",{attrs:{id:"changing-executables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changing-executables"}},[a._v("#")]),a._v(" Changing executables")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BUILD_DIR")]),a._v("/cn* "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/.\n")])])]),s("h3",{attrs:{id:"migrate-chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#migrate-chain"}},[a._v("#")]),a._v(" Migrate chain")]),a._v(" "),s("p",[a._v("Try to find out migrate version from list of current migration")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cnd migrations-list \n")])])]),s("p",[a._v("If you find "),s("code",[a._v("<new_version>")]),a._v(" in the ouput command you ca use the follow command")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cnd migrate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BUILD_VERSION")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/export_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --chain-id "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("     \n  --genesis-time "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_GENESIS_TIME")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/genesis_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json\n  \n")])])]),s("p",[a._v("If you don't find "),s("code",[a._v("<new_version>")]),a._v(" in the valid migrations list use")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/export_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  jq "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.genesis_time=\"'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_GENESIS_TIME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  jq "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.chain_id=\"'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/genesis_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json\n")])])]),s("h3",{attrs:{id:"check-hash-of-genesis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-hash-of-genesis"}},[a._v("#")]),a._v(" Check hash of genesis")]),a._v(" "),s("p",[a._v("To confirm that all validator nodes have produced the same genesis, a comparison must be made between all update participants to demonstrate the consistency of the data.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-M")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/genesis_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" shasum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("256")]),a._v("\n")])])]),s("p",[a._v("Compare the value of the hash obtained with all other participants in the update")]),a._v(" "),s("h3",{attrs:{id:"backup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backup"}},[a._v("#")]),a._v(" Backup")]),a._v(" "),s("p",[a._v("Before starting the update it is recommended to take a full data snapshot of the chain state at the export height."),s("br"),a._v("\nTo do so please run:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("systemctl stop cnd\nsystemctl stop cncli "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# if you running rest server")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND_DATA")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("/.\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND_CONFIG")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("/.\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CNCLI")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CNCLI")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("\n")])])]),s("h3",{attrs:{id:"reset-chain-and-change-geneis-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset-chain-and-change-geneis-file"}},[a._v("#")]),a._v(" Reset chain and change geneis file")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cnd unsafe-reset-all\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/genesis_for_"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NEW_CHAIN_ID")]),a._v(".json "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND_CONFIG")]),a._v("/genesis.json\n")])])]),s("h3",{attrs:{id:"restart-chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restart-chain"}},[a._v("#")]),a._v(" Restart chain")]),a._v(" "),s("p",[a._v("Before restarting the chain we have to reset the value for height for the stop to zero.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s|halt-height = .*|halt-height = 0|g"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v(".tmp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v(".tmp "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_TOML")]),a._v("\nsystemctl start cnd\n")])])]),s("h3",{attrs:{id:"control-chain-restart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#control-chain-restart"}},[a._v("#")]),a._v(" Control chain restart")]),a._v(" "),s("p",[a._v("The new chain should restart at the time set in the "),s("code",[a._v("genesis_time")]),a._v("."),s("br"),a._v("\nControl if the sync starts. Use "),s("code",[a._v("Ctrl + C")]),a._v(" to interrupt the "),s("code",[a._v("journalctl")]),a._v(" command")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("journalctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" cnd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# OUTPUT SHOULD BE LIKE BELOW AFTER GENESI TIME")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.722] Executed block                               module=state height=1 validTxs=0 invalidTxs=0")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.728] Committed state                              module=state height=1 txs=0 appHash=9815044185EB222CE9084AA467A156DFE6B4A0B1BAAC6751DE86BB31C83C4B08")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.745] Executed block                               module=state height=2 validTxs=0 invalidTxs=0")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.751] Committed state                              module=state height=2 txs=0 appHash=96BFD9C8714A79193A7913E5F091470691B195E1E6F028BC46D6B1423F7508A5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.771] Executed block                               module=state height=3 validTxs=0 invalidTxs=0")]),a._v("\n")])])]),s("h3",{attrs:{id:"restart-the-rest-api-if-you-need"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restart-the-rest-api-if-you-need"}},[a._v("#")]),a._v(" Restart the REST API if you need")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cncli config chain-id $NEW_CHAIN_ID\ncncli rest-server --chain-id $NEW_CHAIN_ID --trust-node\n")])])]),s("h2",{attrs:{id:"update-type-2-soft-fork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-type-2-soft-fork"}},[a._v("#")]),a._v(" Update type 2 - Soft fork")]),a._v(" "),s("p",[a._v("This type of upgrade is generally optional: it is released to fix some minor bugs in the software and does not change the status of the chain")]),a._v(" "),s("h3",{attrs:{id:"preliminary-risks-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preliminary-risks-2"}},[a._v("#")]),a._v(" Preliminary/Risks")]),a._v(" "),s("p",[a._v("When signalling a optional update that should follow this procedure, the following information will\nbe let known to all validators:")]),a._v(" "),s("ol",[s("li",[a._v("The new chain software version: "),s("code",[a._v("<new_version>")])])]),a._v(" "),s("p",[a._v("If you are a validator, please make sure that you know all those information before proceeding with the update.")]),a._v(" "),s("h3",{attrs:{id:"setup-environment-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-environment-2"}},[a._v("#")]),a._v(" Setup environment")]),a._v(" "),s("p",[a._v("Each validator has its own specific environment and therefore will have to modify the variables according to its setup."),s("br"),a._v(" "),s("strong",[a._v("The following setups are general guidelines")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("UPDATE_PROFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v('/.profile_update_cnd"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CND=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/.cnd\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CND_CONFIG=\"$HOME_CND/config\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export HOME_CND_DATA=\"$HOME_CND/data\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export BIN_DIR=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/go/bin\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export SRC_GIT_DIR=\"'")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/commercionetwork\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export BUILD_DIR=\"$SRC_GIT_DIR/build\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'export BUILD_VERSION=\"<new_version>\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('". '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UPDATE_PROFILE")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/.profile\n")])])]),s("h3",{attrs:{id:"compile-new-executables-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compile-new-executables-2"}},[a._v("#")]),a._v(" Compile new executables")]),a._v(" "),s("p",[a._v("In order to properly update your validator node, first of all you need to clone the\n"),s("a",{attrs:{href:"https://github.com/commercionetwork/commercionetwork",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("commercionetwork")]),a._v(" repo"),s("OutboundLink")],1),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/commercionetwork/commercionetwork.git "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SRC_GIT_DIR")]),a._v("\n")])])]),s("p",[a._v("Once downloaded, you need to compile the binaries with correct version:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SRC_GIT_DIR")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BUILD_VERSION")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" build\n")])])]),s("p",[a._v("Verify your version")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./build/cnd version\n")])])]),s("p",[a._v("should be the same value of "),s("code",[a._v("<new_version>")])]),a._v(" "),s("h3",{attrs:{id:"backup-executables-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backup-executables-2"}},[a._v("#")]),a._v(" Backup executables")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cnd "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cnd.back\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cncli "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cncli.back\n")])])]),s("h3",{attrs:{id:"restart-chain-changing-executables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restart-chain-changing-executables"}},[a._v("#")]),a._v(" Restart chain changing executables")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl stop cnd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl stop cncli\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BUILD_DIR")]),a._v("/cn* "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/.\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start cnd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start cncli\n\n")])])]),s("h3",{attrs:{id:"control-chain-restart-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#control-chain-restart-2"}},[a._v("#")]),a._v(" Control chain restart")]),a._v(" "),s("p",[a._v("The new chain should restart at the time set in the "),s("code",[a._v("genesis_time")]),a._v("."),s("br"),a._v("\nControl if the sync starts. Use "),s("code",[a._v("Ctrl + C")]),a._v(" to interrupt the "),s("code",[a._v("journalctl")]),a._v(" command")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("journalctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" cnd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# OUTPUT SHOULD BE LIKE BELOW AFTER GENESI TIME")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.722] Executed block                               module=state height=1 validTxs=0 invalidTxs=0")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.728] Committed state                              module=state height=1 txs=0 appHash=9815044185EB222CE9084AA467A156DFE6B4A0B1BAAC6751DE86BB31C83C4B08")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.745] Executed block                               module=state height=2 validTxs=0 invalidTxs=0")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.751] Committed state                              module=state height=2 txs=0 appHash=96BFD9C8714A79193A7913E5F091470691B195E1E6F028BC46D6B1423F7508A5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Aug 13 16:30:20 commerciotestnet-node4 cnd[351]: I[2019-08-13|16:30:20.771] Executed block                               module=state height=3 validTxs=0 invalidTxs=0")]),a._v("\n")])])]),s("h2",{attrs:{id:"update-type-3-reset-reinstall-chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-type-3-reset-reinstall-chain"}},[a._v("#")]),a._v(" Update type 3 - Reset/reinstall chain")]),a._v(" "),s("p",[a._v("This procedure is very rare and is only performed in borderline cases."),s("br"),a._v("\nWith this process the chain is completely reinitialized and a new genesis is produced by the chain management system."),s("br"),a._v("\nUsually this procedure is applied on development and test chains.")]),a._v(" "),s("h3",{attrs:{id:"backup-executables-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backup-executables-3"}},[a._v("#")]),a._v(" Backup executables")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cnd "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cnd.back\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cncli "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BIN_DIR")]),a._v("/cncli.back\n")])])]),s("h3",{attrs:{id:"backup-chain-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backup-chain-database"}},[a._v("#")]),a._v(" Backup chain database")]),a._v(" "),s("p",[a._v("Before starting the update it is recommended to take a full data snapshot of the chain state at the export height."),s("br"),a._v("\nTo do so please run:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("systemctl stop cnd\nsystemctl stop cncli "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# if you running rest server")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND_DATA")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("/.\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND_CONFIG")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CND")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("/.\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CNCLI")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME_CNCLI")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CHAIN_ID")]),a._v("\n")])])]),s("h3",{attrs:{id:"reinstall-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reinstall-node"}},[a._v("#")]),a._v(" Reinstall node")]),a._v(" "),s("p",[a._v("Follow all steps in "),s("RouterLink",{attrs:{to:"/docs2.2.0/nodes/full-node-installation.html"}},[a._v("Installing a full node")]),s("br"),a._v("\nFollow all steps in "),s("RouterLink",{attrs:{to:"/docs2.2.0/nodes/validator-node-installation.html"}},[a._v("Becoming a validator")])],1)])}),[],!1,null,null,null);s.default=n.exports}}]);