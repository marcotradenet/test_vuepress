(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{445:function(t,s,e){"use strict";e.r(s);var a=e(14),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"installing-a-full-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-a-full-node"}},[t._v("#")]),t._v(" Installing a full node")]),t._v(" "),s("p",[t._v("After you've setup your hardware following the "),s("RouterLink",{attrs:{to:"/nodes/hardware-requirements.html"}},[t._v("hardware requirements")]),t._v(" you are now ready to\nbecome a Commercio.network full node.")],1),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Make sure you have read the "),s("RouterLink",{attrs:{to:"/nodes/hardware-requirements.html"}},[t._v("hardware requirements")]),t._v(" before starting")],1)]),t._v(" "),s("h2",{attrs:{id:"_1-installing-the-software-requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-installing-the-software-requirements"}},[t._v("#")]),t._v(" 1. Installing the software requirements")]),t._v(" "),s("p",[t._v("In order to update the OS so that you can work properly, execute the following commands:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" upgrade "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" gcc "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v("\nsnap "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--classic")]),t._v(" go\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NODENAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<your-moniker>"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export GOPATH=\"$HOME/go\"'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export PATH=\"$GOPATH/bin:$PATH\"'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export PATH=\"$PATH:/snap/bin\"'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export NODENAME='),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NODENAME")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.profile\n")])])]),s("h2",{attrs:{id:"_2-chain-selection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-chain-selection"}},[t._v("#")]),t._v(" 2. Chain selection")]),t._v(" "),s("p",[t._v("Before installing the node, please select which chain you would like to connect to (for example "),s("strong",[t._v("testent11k")]),t._v(")")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" commercio-chains\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" commercio-chains "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" commercio-chains\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/commercionetwork/chains.git "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" commercio-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("chain-version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Always remember to pick the latest chain version listed inside "),s("a",{attrs:{href:"https://github.com/commercionetwork/chains",target:"_blank",rel:"noopener noreferrer"}},[t._v("chains repo"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"_3-install-binaries-genesis-file-and-setup-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-install-binaries-genesis-file-and-setup-configuration"}},[t._v("#")]),t._v(" 3. Install binaries, genesis file and setup configuration")]),t._v(" "),s("p",[t._v("Compile binaries")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pkill")]),t._v(" commercionetworkd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/commercionetwork/commercionetwork.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout tags/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-oP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Release\\s+\\K\\S+'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\ngo mod verify\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("p",[t._v("Test if you have the correct binaries version:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("commercionetworkd version\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Should output the same version written inside the .data file.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat .data | grep -oP 'Release\\s+\\K\\S+'")]),t._v("\n")])])]),s("p",[t._v("Setup the validator node name. We will use the same name for node as well as the wallet key:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CHAINID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("commercio-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-oP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Name\\s+\\K\\S+'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile")]),t._v('\nexport CHAINID="'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHAINID")]),t._v('"\nEOF')]),t._v("\n")])])]),s("p",[t._v("Init the "),s("code",[t._v(".commercionetwork")]),t._v(" folder with the basic configuration")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("At this point there may be some differences if you are using "),s("code",[t._v("KMS")]),t._v(" with "),s("code",[t._v("HSM")]),t._v(". Specifications will be published shortly.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("commercionetworkd unsafe-reset-all\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you get a error because .commercionetwork folder is not present don't worry ")]),t._v("\n\ncommercionetworkd init "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NODENAME")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you get a error because .commercionetwork folder is present don't worry ")]),t._v("\n")])])]),s("p",[t._v("Install "),s("code",[t._v("genesis.json")]),t._v(" file")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" ~/.commercionetwork/config/genesis.json\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" genesis.json ~/.commercionetwork/config\n")])])]),s("p",[t._v("Change the persistent peers inside "),s("code",[t._v("config.toml")]),t._v(" file")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s|persistent_peers = '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(".*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("|persistent_peers = "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-oP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Persistent peers\\s+\\K\\S+'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('|g"')]),t._v(" ~/.commercionetwork/config/config.toml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ~/.commercionetwork/config/config.toml.tmp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" ~/.commercionetwork/config/config.toml.tmp  ~/.commercionetwork/config/config.toml\n")])])]),s("p",[t._v("Change the seeds inside the "),s("code",[t._v("config.toml")]),t._v(" file")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s|seeds = '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(".*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("|seeds = "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-oP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seeds\\s+\\K\\S+'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('|g"')]),t._v(" ~/.commercionetwork/config/config.toml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ~/.commercionetwork/config/config.toml.tmp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" ~/.commercionetwork/config/config.toml.tmp  ~/.commercionetwork/config/config.toml\n")])])]),s("p",[t._v("Change "),s("code",[t._v("external_address")]),t._v(" value to contact your node using public ip of your node:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PUB_IP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-4")]),t._v(" icanhazip.com"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s|external_address = '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(".*"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("|external_address = "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PUB_IP")]),t._v(":26656"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('|g"')]),t._v(" ~/.commercionetwork/config/config.toml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ~/.commercionetwork/config/config.toml.tmp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" ~/.commercionetwork/config/config.toml.tmp  ~/.commercionetwork/config/config.toml\n")])])]),s("h2",{attrs:{id:"_4-configure-the-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-configure-the-service"}},[t._v("#")]),t._v(" 4. Configure the service")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/systemd/system/commercionetworkd.service "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF  \n[Unit]\nDescription=Commercio Node\nAfter=network-online.target\n\n[Service]\nUser=root\nExecStart=/root/go/bin/commercionetworkd start\nRestart=always\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\nEOF")]),t._v("\n")])])]),s("h2",{attrs:{id:"_5-sync-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-sync-node"}},[t._v("#")]),t._v(" 5. Sync node")]),t._v(" "),s("p",[t._v("Choose 1 of these 3 ways to syncronize your node to the blockchain:")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#from-the-start"}},[t._v("From the start")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#using-the-state-sync-feature"}},[t._v("Using the state sync future")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#using-the-quicksync-dump"}},[t._v("Using the quicksync dump")])])]),t._v(" "),s("h3",{attrs:{id:"from-the-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from-the-start"}},[t._v("#")]),t._v(" From the start")]),t._v(" "),s("p",[t._v("If you intend to syncronize eveything from the start you can skip this part and continue with the configuration."),s("br"),t._v("\n100.000 blocks should synchronize within an hour.")]),t._v(" "),s("h3",{attrs:{id:"using-the-state-sync-feature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-state-sync-feature"}},[t._v("#")]),t._v(" Using the state sync feature")]),t._v(" "),s("p",[t._v("Under the state sync section in "),s("code",[t._v("~/.commercionetwork/config/config.toml")]),t._v(" you will find multiple settings that need to be configured in order for your node to use state sync.\nYou need get information from chain about trusted block using")]),t._v(" "),s("p",[t._v("Select open rpc services of chains")]),t._v(" "),s("ul",[s("li",[t._v("Testnet:\n"),s("ul",[s("li",[t._v("With name: rpc-testnet.commercio.network, rpc2-testnet.commercio.network")]),t._v(" "),s("li",[t._v("With ip: 157.230.110.18:26657, 46.101.146.48:26657")])])]),t._v(" "),s("li",[t._v("Mainnet: (WIP)\n"),s("ul",[s("li",[t._v("https://rpc-mainnet.commercio.network, https://rpc2-mainnet.commercio.network (WIP)")])])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRUST_RPC1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"157.230.110.18:26657"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRUST_RPC2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"46.101.146.48:26657"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TRUST_RPC1")]),t._v('/block"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.result.block.header.height + \"\\n\" + .result.block_id.hash'")]),t._v("\n")])])]),s("p",[t._v("The command should be return block height and hash of block as follow:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("5075021\nEB1032C6DFC9F2708B16DF8163CAB2258B0F1E1452AEF031CA3F32004F54C9D1\n")])])]),s("p",[t._v("Edit these settings accordingly:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[statesync]\n\nenable = true\n\nrpc_servers = "$TRUST_RPC1,$TRUST_RPC2"\ntrust_height = 5075021\ntrust_hash = "EB1032C6DFC9F2708B16DF8163CAB2258B0F1E1452AEF031CA3F32004F54C9D1"\n')])])]),s("h3",{attrs:{id:"using-the-quicksync-dump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-quicksync-dump"}},[t._v("#")]),t._v(" Using the quicksync dump:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://quicksync.commercio.network/'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHAINID")]),t._v('.latest.tgz"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" ~/.commercionetwork/\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check if the checksum matches the one present inside https://quicksync.commercio.network")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/.commercionetwork/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-zxf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" $CHAINID"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(".latest.tgz\n")])])]),s("p",[t._v("Now you can start you full node. Enable the newly created server and try starting it using:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start the node  ")]),t._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" commercionetworkd  \nsystemctl start commercionetworkd\n")])])]),s("p",[t._v("Control if the sync was started. Use "),s("code",[t._v("Ctrl + C")]),t._v(" to interrupt the "),s("code",[t._v("journalctl")]),t._v(" command")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("journalctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" commercionetworkd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# OUTPUT SHOULD BE LIKE BELOW")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Aug 13 16:30:20 commerciotestnet-node4 commercionetworkd[351]: I[2019-08-13|16:30:20.722] Executed block                               module=state height=1 validTxs=0 invalidTxs=0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Aug 13 16:30:20 commerciotestnet-node4 commercionetworkd[351]: I[2019-08-13|16:30:20.728] Committed state                              module=state height=1 txs=0 appHash=9815044185EB222CE9084AA467A156DFE6B4A0B1BAAC6751DE86BB31C83C4B08")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Aug 13 16:30:20 commerciotestnet-node4 commercionetworkd[351]: I[2019-08-13|16:30:20.745] Executed block                               module=state height=2 validTxs=0 invalidTxs=0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Aug 13 16:30:20 commerciotestnet-node4 commercionetworkd[351]: I[2019-08-13|16:30:20.751] Committed state                              module=state height=2 txs=0 appHash=96BFD9C8714A79193A7913E5F091470691B195E1E6F028BC46D6B1423F7508A5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Aug 13 16:30:20 commerciotestnet-node4 commercionetworkd[351]: I[2019-08-13|16:30:20.771] Executed block                               module=state height=3 validTxs=0 invalidTxs=0")]),t._v("\n")])])]),s("h2",{attrs:{id:"_6-start-the-rest-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-start-the-rest-api"}},[t._v("#")]),t._v(" 6. Start the REST API")]),t._v(" "),s("p",[t._v("Each full node can start up its own REST API service.\nThis will allow it to expose some endpoints that can be used in order to query the chain state at any moment.")]),t._v(" "),s("p",[t._v("If you want to start such a service, you need to change the parameters of your "),s("code",[t._v("~/.commercionetwork/config/app.toml")]),t._v(" as follow")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable defines if the API server should be enabled.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("enable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Swagger defines if swagger documentation should automatically be registered.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("swagger")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Address defines the API server to listen on.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("address")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp://0.0.0.0:1317"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])])]),s("p",[t._v("Apply the configuration using")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl restart commercionetworkd\n")])])]),s("p",[t._v("This will start up the REST server and make it reachable using the port "),s("code",[t._v("1317")]),t._v("."),s("br"),t._v(" "),s("strong",[t._v("From here, if you want you can use services such as "),s("a",{attrs:{href:"https://www.nginx.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx"),s("OutboundLink")],1),t._v(" in order to make it available to other devices.")])]),t._v(" "),s("h2",{attrs:{id:"install-and-config-cosmovisor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-and-config-cosmovisor"}},[t._v("#")]),t._v(" Install and config cosmovisor")]),t._v(" "),s("h3",{attrs:{id:"what-is-cosmovisor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-cosmovisor"}},[t._v("#")]),t._v(" What is cosmovisor?")]),t._v(" "),s("p",[s("code",[t._v("cosmovisor")]),t._v(" is a small process manager for Cosmos SDK application binaries that monitors the governance module for incoming chain upgrade proposals.\nIf it sees a proposal that gets approved, cosmovisor can automatically download the new binary, stop the current binary, switch from the old binary to the new one, and finally restart the node with the new binary."),s("br"),t._v(" "),s("strong",[t._v("As in all other explanations, it is assumed that you are acting as root. Change the parameters and variables depending on your installation environment")])]),t._v(" "),s("h3",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("p",[t._v("Download and compile cosmovisor:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/cosmos/cosmos-sdk.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" cosmos-sdk\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout cosmovisor/v0.1.0\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you can use version v1.0.0 or v1.1.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" cosmovisor\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" cosmovisor\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" cosmovisor "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/go/bin\n")])])]),s("p",[t._v("Make cosmovisor folder structure:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.commercionetwork/cosmovisor/genesis/bin\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.commercionetwork/cosmovisor/upgrades\n")])])]),s("p",[t._v("Copy "),s("code",[t._v("commercionetwork")]),t._v(" to cosmovisor folder")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/go/bin/commercionetworkd "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.commercionetwork/cosmovisor/genesis/bin\n")])])]),s("p",[t._v("After installation your "),s("code",[t._v(".commercionetwork")]),t._v(" folder should be structured like below")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".commercionetwork\n├── config\n│   └── app.toml\n│   └── config.toml\n│   └── genesis.json\n│   └── node_id.json\n│   └── priv_validator_key.json\n├── data\n│   └── priv_validator_state.json\n└── cosmovisor\n    └── current\n    └── genesis\n    └── bin\n    │   └── commercionetword\n    └── upgrades\n    └── <name>\n        └── bin\n            └── commercionetword\n")])])]),s("p",[t._v("Configure the service:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/systemd/system/commercionetworkd.service "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('EOF  \n[Unit]\nDescription=Commercio Network Node\nAfter=network.target\n\n[Service]\nUser=root\nLimitNOFILE=4096\n\nRestart=always\nRestartSec=3\n\nEnvironment="LD_LIBRARY_PATH='),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LD_LIBRARY_PATH}")]),t._v(':/root/bin/go" # <-- set this only if you compiled "commercionetworkd" locally\nEnvironment="DAEMON_NAME=commercionetworkd"\nEnvironment="DAEMON_HOME=/root/.commercionetwork"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=false"\nEnvironment="DAEMON_LOG_BUFFER_SIZE=512"\nEnvironment="UNSAFE_SKIP_BACKUP=true" # Set to false if you want make backup during the upgrade\n\nExecStart=/root/go/bin/cosmovisor start --home="/root/.commercionetwork" \n\n[Install]\nWantedBy=multi-user.target\nEOF')]),t._v("\n")])])]),s("p",[t._v("Now you can start your full node. Enable the newly created server and try to start it using:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" commercionetworkd  \nsystemctl start commercionetworkd\n")])])]),s("p",[t._v("Control if the sync was started. Use "),s("code",[t._v("Ctrl + C")]),t._v(" to interrupt the "),s("code",[t._v("journalctl")]),t._v(" command:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("journalctl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" commercionetworkd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v("\n")])])]),s("p",[t._v("Set env of cosmovisor for you convenience")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export DAEMON_NAME=commercionetworkd'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export DAEMON_HOME=/root/.commercionetwork'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export DAEMON_RESTART_AFTER_UPGRADE=true'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export DAEMON_ALLOW_DOWNLOAD_BINARIES=false'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export DAEMON_LOG_BUFFER_SIZE=512'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export UNSAFE_SKIP_BACKUP=true'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n")])])]),s("h2",{attrs:{id:"next-step"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-step"}},[t._v("#")]),t._v(" Next step")]),t._v(" "),s("p",[t._v("Now that you are a Commercio.network full node, if you want you can become a validator.\nIf you wish to do so, please read the "),s("RouterLink",{attrs:{to:"/nodes/validator-node-installation.html"}},[s("em",[t._v("Becoming a validator")]),t._v(" guide")]),t._v(".")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);